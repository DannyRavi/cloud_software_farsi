<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>Cloud Design Patterns - Readme</title>
    <link rel="stylesheet" href="readme_files/styles/main.css" type="text/css" />
    <link rel="stylesheet" href="readme_files/styles/mnp.css" type="text/css" />
    <style type="text/css">

 p.MsoNormal
  {margin-bottom:.0001pt;
  font-size:11.0pt;
  font-family:"Calibri","sans-serif";
          margin-left: 0in;
            margin-right: 0in;
            margin-top: 0in;
        }
    </style>
</head>
<body>
    <a name="top"></a>
    <div id="commonWrapper">
        <div id="pageWrapper">
            <!--   START HEADER   -->
            <div class="page_header">
                <div class="page_header_logo">
                    <table>
                        <tr>
                            <td>
                                <a href="Readme.htm">
                                    <div class="page_header_title">
                                        Cloud Design Patterns</div>
                                </a>
                                <div class="page_header_subtitle">
                                    About the Example</div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            <!--   END HEADER   -->
            <div id="Main">
                <div id="MainMid">
                    <!-- START NAVIGATION BAR -->
                    <div id="TopNavigation">
                        <div class="topnav_item" id="topnav1">
                            <a tabindex="1" href="Readme.htm"><span class="topnav_item_left_selected"></span><span
                                class="topnav_item_middle_selected"><span class="topnav_item_text">Readme</span>
                            </span><span class="topnav_item_right_selected"></span></a>
                            <a tabindex="1" href="ReleaseNotes.htm"><span class="topnav_item_left"></span><span
                                class="topnav_item_middle"><span class="topnav_item_text">Release notes</span>
                            </span><span class="topnav_item_right"></span></a>
                        </div>
                        <div class="topnav_item_divider">
                        </div>
                    </div>
                    <!-- END NAVIGATION BAR -->
                    <div id="Content">
                        <div class="content_table_home">
                            <div class="homePgImgWide">
                                <div class="homearea">
                                    <div class="pageTitle">
                                        <div class="maintitle">Health Endpoint Monitoring Pattern</div>
                                    </div>
                                    <div class="newpromo">
                                        <a href="http://msdn.microsoft.com/practices">
                                            <img src="readme_files/images/pnp_logo.gif" alt="Microsoft Patterns & Practices" />
                                        </a>
                                    </div>
                                    <div class="content_header_text">

<p>This document describes the Health Endpoint Monitoring Pattern example from the guide
<i>Cloud Design Patterns</i> (see <a href="http://aka.ms/Cloud-Design-Patterns" target="_blank">http://aka.ms/Cloud-Design-Patterns</a>).</p>

<p>&nbsp;</p><hr /><p>&nbsp;</p>

<p><b>Before you start</b></p>
<p>&nbsp;</p>
<p>Ensure that you have installed all of the software prerequisites. For details see the <a href="ReleaseNotes.htm"><b>Release Notes</b></a>.</p>
<p>&nbsp;</p>

<p>The example demonstrates operational aspects of applications running in Windows Azure. Therefore, you will need to
use the diagnostics tools in order to understand how the code sample works. You <b>must</b> ensure that
the web and worker roles in the solution are configured to use the diagnostics mechanism. If not, you will not
see the trace information generated by the example.</p>
<p>&nbsp;</p><hr /><p>&nbsp;</p>

<p><b>About the Example</b></p>
<p>&nbsp;</p>
<p>This example shows how you can set up a web endpoint that checks the health of dependent services
by returning appropriate status codes. The endpoints are designed to be consumed by a watchdog monitoring service such as Windows Azure Endpoint
Monitoring, but you can open and invoke the endpoint operations from a browser to see the results. You can also deploy and configure your
own endpoint monitoring tool of choice to send requests to the service operations and analyze the responses received.</p>

<p>&nbsp;</p><hr /><p>&nbsp;</p>

<p><b>Running the Example</b></p>
<p>&nbsp;</p>
<p>You can run this example locally in the Visual Studio Windows Azure emulator. You can also run this example by deploying it to a Windows Azure Cloud Service.</p>
<p>&nbsp;</p>
<ul>
	<li>Start Visual Studio using an account that has Administrator privileges ("Run as Administrator").</li>
	<li>Open the solution you want to explore from the subfolders where you downloaded the examples.</li>
	<li>Right-click on each role in Solution Explorer, select Properties, and ensure that the role is configured to generate diagnostic information.</li>
    <br />
	<li>If you want to run the example in the local Windows Azure emulator:</li>
	<ul>
	  <li>Press <i>F5</i> in Visual Studio to start the example running.</il>
	  <li>Open the Windows Azure Compute Emulator UI from the icon in the notification area.</li>
	  <li>Select each role in turn and view the diagnostic information generated by Trace statements in the code.</li>
	</ul>
	<li>If you want to run the example on Windows Azure:</li>
	<ul>
	  <li>Provision a Windows Azure Cloud Service and deploy the application to it from Visual Studio.</il>
	  <li>Open the Server Explorer Window in Visual Studio and expand the Windows Azure entry.</li>
	  <li>Expand Cloud Services and then expand the entry for the solution you deployed.</li>
	  <li>Right-click each role instance and select View Diagnostics Data to see the diagnostic information generated by Trace statements in the code.
	  This is written to the WADLogsTable in the Storage/Development/Tables section.</li>
	</ul>

	<li>Navigate to one of the monitoring endpoints. Use the F12 Developer Tools in Internet Explorer or the
	equivalent in your browser to watch the network traffic response pattern. The response will be 200 (OK), or a 500 error code that indicates a problem with a service.</li>
	<li>The sample contains four endpoints that you can test:</li>
	<ul>
		<li><b>/HealthCheck/CoreServices</b> This is a simple check on dependent services to determine if they are responding.</li>
		<li><b>/HealthCheck/ObscurePath/{</b><i>path</i><b>}</b> This demonstrates a check operation that uses a configurable obscure path defined in the service configuration file.
		Replace <i>path</i> with the value of the setting named Test.ObscurePathfrom in the file ServiceConfiguration.*.csfg.
		Note that this technique is not to be used as an alternative to properly securing an application and implementing authentication.</b></li>
		<li><b>/HealthCheck/CheckUnstableServiceHealth</b> This will randomly return a 500 exception for approximately 20% of the requests.</li>
		<li><b>/HealthCheck/TestResponseFromConfig</b> This returns a response code set in configuration (.cscfg) for testing.
		Deploy the solution with endpoint monitoring configured to use this operation, and then explicitly set the "Test.ReturnStatusCode" setting
		to return the required status code to test and demonstrate the effects of these codes on the monitoring service.</li>
	</ul>

</ul>
                  </div>
                                    <br />

                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="footerstrip">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clear">
    </div>
</body>
</html>
